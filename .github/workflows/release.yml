# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: RELEASEv2

on:
  pull_request:
    types:
      - closed

    branches:
      - master
  workflow_dispatch:
    inputs:
      branch:
        description: "Give the Branch name"
        required: true
        default: "master"
jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [ 11 ]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 50
      - name: Set up JDK ${{ matrix.version }}
        uses: actions/setup-java@v2
        with:
          java-version: '${{ matrix.version }}'
          distribution: 'adopt'
      - name: Configure Git User
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

      - name: Change Version of Release version
        run: mvn -B versions:set -DnewVersion=1.0.${{github.run_number}} --file pom.xml -P java${{ matrix.version }}

      - name: Build with Maven
        run: mvn -B clean package  -DskipTests=true --file pom.xml -P java${{ matrix.version }}

      - name: Create Release
        uses: fregante/release-with-changelog@v3
        with:
          token: ${{ secrets.MY_GITHUBKEY }}
          exclude: '^Meta'
          commit-template: '- {title} ‚Üê {hash}'
          template: |
            ### Changelog

            {commits}

            {range}

      - name: Release the package
        run: mvn release:prepare release:perform -B -s settings.xml -DreleaseVersion=1.0.${{github.run_number}}
        env:
          CI_DEPLOY_USERNAME: ${{ secrets.MY_USERNAME }}
          CI_DEPLOY_PASSWORD: ${{ secrets.DEPLOYMENT }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.DEPLOYMENT }}